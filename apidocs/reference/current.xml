<api>
<package name="org.mybatis.cdi"
>
<class name="CDIUtils"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
<method name="findSqlSessionFactory"
 return="org.apache.ibatis.session.SqlSessionFactory"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="name" type="java.lang.String">
</parameter>
<parameter name="qualifiers" type="java.util.Set&lt;java.lang.annotation.Annotation&gt;">
</parameter>
<parameter name="beanManager" type="javax.enterprise.inject.spi.BeanManager">
</parameter>
<parameter name="creationalContext" type="javax.enterprise.context.spi.CreationalContext">
</parameter>
</method>
<method name="getRegistry"
 return="org.mybatis.cdi.SqlSessionManagerRegistry"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="beanManager" type="javax.enterprise.inject.spi.BeanManager">
</parameter>
<parameter name="creationalContext" type="javax.enterprise.context.spi.CreationalContext">
</parameter>
</method>
</class>
<class name="CDIUtils.SerializableAnyAnnotationLiteral"
 extends="javax.enterprise.util.AnnotationLiteral"
 abstract="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<implements name="java.io.Serializable">
</implements>
<constructor name="CDIUtils.SerializableAnyAnnotationLiteral"
 type="org.mybatis.cdi.CDIUtils.SerializableAnyAnnotationLiteral"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
</class>
<class name="CDIUtils.SerializableDefaultAnnotationLiteral"
 extends="javax.enterprise.util.AnnotationLiteral"
 abstract="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<implements name="java.io.Serializable">
</implements>
<constructor name="CDIUtils.SerializableDefaultAnnotationLiteral"
 type="org.mybatis.cdi.CDIUtils.SerializableDefaultAnnotationLiteral"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
</class>
<class name="Extension"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<implements name="javax.enterprise.inject.spi.Extension">
</implements>
<constructor name="Extension"
 type="org.mybatis.cdi.Extension"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="afterBeanDiscovery"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="abd" type="javax.enterprise.inject.spi.AfterBeanDiscovery">
</parameter>
<parameter name="bm" type="javax.enterprise.inject.spi.BeanManager">
</parameter>
</method>
<method name="processInjectionTarget"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="event" type="javax.enterprise.inject.spi.ProcessInjectionTarget&lt;X&gt;">
</parameter>
</method>
</class>
<class name="Extension.BeanKey"
 extends="java.lang.Object"
 abstract="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="Extension.BeanKey"
 type="org.mybatis.cdi.Extension.BeanKey"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="type" type="java.lang.Class&lt;java.lang.reflect.Type&gt;">
</parameter>
<parameter name="annotations" type="java.util.Set&lt;java.lang.annotation.Annotation&gt;">
</parameter>
</constructor>
<method name="compareTo"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="o" type="org.mybatis.cdi.Extension.BeanKey">
</parameter>
</method>
<method name="createBean"
 return="javax.enterprise.inject.spi.Bean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="bm" type="javax.enterprise.inject.spi.BeanManager">
</parameter>
</method>
<method name="getKey"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
</class>
<class name="Isolation"
 extends="java.lang.Enum"
 abstract="false"
 static="false"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
<method name="getTransactionIsolationLevel"
 return="org.apache.ibatis.session.TransactionIsolationLevel"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="valueOf"
 return="org.mybatis.cdi.Isolation"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="name" type="java.lang.String">
</parameter>
</method>
<method name="values"
 return="org.mybatis.cdi.Isolation[]"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</method>
</class>
<class name="JtaTransactionInterceptor"
 extends="org.mybatis.cdi.LocalTransactionInterceptor"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="JtaTransactionInterceptor"
 type="org.mybatis.cdi.JtaTransactionInterceptor"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
</class>
<class name="LocalTransactionInterceptor"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<implements name="java.io.Serializable">
</implements>
<constructor name="LocalTransactionInterceptor"
 type="org.mybatis.cdi.LocalTransactionInterceptor"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="beginJta"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="protected"
>
<exception name="NotSupportedException" type="javax.transaction.NotSupportedException">
</exception>
<exception name="SystemException" type="javax.transaction.SystemException">
</exception>
</method>
<method name="endJta"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="protected"
>
<parameter name="isExternaTransaction" type="boolean">
</parameter>
<parameter name="commit" type="boolean">
</parameter>
<exception name="HeuristicMixedException" type="javax.transaction.HeuristicMixedException">
</exception>
<exception name="HeuristicRollbackException" type="javax.transaction.HeuristicRollbackException">
</exception>
<exception name="RollbackException" type="javax.transaction.RollbackException">
</exception>
<exception name="SystemException" type="javax.transaction.SystemException">
</exception>
</method>
<method name="getTransactionalAnnotation"
 return="org.mybatis.cdi.Transactional"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="protected"
>
<parameter name="ctx" type="javax.interceptor.InvocationContext">
</parameter>
</method>
<method name="invoke"
 return="java.lang.Object"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="ctx" type="javax.interceptor.InvocationContext">
</parameter>
<exception name="Exception" type="java.lang.Exception">
</exception>
</method>
<method name="isTransactionActive"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="protected"
>
<exception name="SystemException" type="javax.transaction.SystemException">
</exception>
</method>
</class>
<class name="Mapper"
 extends="java.lang.Object"
 abstract="true"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<implements name="java.lang.annotation.Annotation">
</implements>
</class>
<class name="MyBatisBean"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<implements name="javax.enterprise.inject.spi.Bean">
</implements>
<implements name="java.io.Serializable">
</implements>
<constructor name="MyBatisBean"
 type="org.mybatis.cdi.MyBatisBean"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="type" type="java.lang.Class&lt;java.lang.reflect.Type&gt;">
</parameter>
<parameter name="qualifiers" type="java.util.Set&lt;java.lang.annotation.Annotation&gt;">
</parameter>
<parameter name="sqlSessionFactoryName" type="java.lang.String">
</parameter>
<parameter name="beanManager" type="javax.enterprise.inject.spi.BeanManager">
</parameter>
</constructor>
<method name="create"
 return="java.lang.Object"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="creationalContext" type="javax.enterprise.context.spi.CreationalContext">
</parameter>
</method>
<method name="destroy"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="instance" type="java.lang.Object">
</parameter>
<parameter name="creationalContext" type="javax.enterprise.context.spi.CreationalContext">
</parameter>
</method>
<method name="getBeanClass"
 return="java.lang.Class&lt;java.lang.reflect.Type&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getInjectionPoints"
 return="java.util.Set&lt;java.lang.Object&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getName"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getQualifiers"
 return="java.util.Set&lt;java.lang.annotation.Annotation&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getScope"
 return="java.lang.Class&lt;javax.enterprise.context.Dependent&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getStereotypes"
 return="java.util.Set&lt;java.lang.Object&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getTypes"
 return="java.util.Set&lt;java.lang.reflect.Type&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="isAlternative"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="isNullable"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<field name="beanManager"
 type="javax.enterprise.inject.spi.BeanManager"
 transient="false"
 volatile="false"
 static="false"
 final="true"
 deprecated="not deprecated"
 visibility="protected"
>
</field>
<field name="qualifiers"
 type="java.util.Set"
 transient="false"
 volatile="false"
 static="false"
 final="true"
 deprecated="not deprecated"
 visibility="protected"
>
</field>
<field name="sqlSessionFactoryName"
 type="java.lang.String"
 transient="false"
 volatile="false"
 static="false"
 final="true"
 deprecated="not deprecated"
 visibility="protected"
>
</field>
<field name="type"
 type="java.lang.Class"
 transient="false"
 volatile="false"
 static="false"
 final="true"
 deprecated="not deprecated"
 visibility="protected"
>
</field>
</class>
<class name="MybatisCdiConfigurationException"
 extends="java.lang.RuntimeException"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="MybatisCdiConfigurationException"
 type="org.mybatis.cdi.MybatisCdiConfigurationException"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="message" type="java.lang.String">
</parameter>
</constructor>
</class>
<class name="SerializableMapperProxy"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<implements name="java.io.Serializable">
</implements>
<constructor name="SerializableMapperProxy"
 type="org.mybatis.cdi.SerializableMapperProxy"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="bean" type="org.mybatis.cdi.MyBatisBean">
</parameter>
<parameter name="creationalContext" type="javax.enterprise.context.spi.CreationalContext">
</parameter>
</constructor>
<method name="invoke"
 return="java.lang.Object"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="proxy" type="java.lang.Object">
</parameter>
<parameter name="method" type="java.lang.reflect.Method">
</parameter>
<parameter name="args" type="java.lang.Object[]">
</parameter>
<exception name="IllegalAccessException" type="java.lang.IllegalAccessException">
</exception>
<exception name="InvocationTargetException" type="java.lang.reflect.InvocationTargetException">
</exception>
</method>
</class>
<class name="SqlSessionManagerRegistry"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="SqlSessionManagerRegistry"
 type="org.mybatis.cdi.SqlSessionManagerRegistry"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="getManager"
 return="org.apache.ibatis.session.SqlSessionManager"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="factory" type="org.apache.ibatis.session.SqlSessionFactory">
</parameter>
</method>
<method name="getManagers"
 return="java.util.Collection&lt;org.apache.ibatis.session.SqlSessionManager&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="init"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
</class>
<class name="Transactional"
 extends="java.lang.Object"
 abstract="true"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<implements name="java.lang.annotation.Annotation">
</implements>
</class>
</package>
</api>
